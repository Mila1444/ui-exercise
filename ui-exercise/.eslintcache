[{"C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\index.js":"1","C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\App.js":"2","C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\reportWebVitals.js":"3","C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\components\\Home.js":"4","C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\components\\Header.js":"5","C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\components\\TacoList.js":"6"},{"size":543,"mtime":1607841527028,"results":"7","hashOfConfig":"8"},{"size":490,"mtime":1607845166831,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1807,"mtime":1607926558063,"results":"11","hashOfConfig":"8"},{"size":505,"mtime":1607921015597,"results":"12","hashOfConfig":"8"},{"size":2729,"mtime":1607921260128,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1oyusgy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\index.js",[],["28","29"],"C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\App.js",[],"C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\reportWebVitals.js",[],"C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\components\\Home.js",[],"C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\components\\Header.js",[],"C:\\Users\\Fatima\\code\\exercise\\ui-exercise\\ui-exercise\\src\\components\\TacoList.js",["30"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\n//This component will display list of taco places per location\r\nfunction TacoList(props) {\r\n\r\n    //Variable that will keep taco place info in state\r\n    const [tacoInfo, setTacoInfo] = useState(\"\");\r\n    //Declares variable using the hook useParams, which returns an object of key/value\r\n    const params = useParams();\r\n    //Variable that will hold details of location. We are naming it cityInfo to stay consistent with the \"Home\" component\r\n    const cityInfo = params.cityInfo;\r\n\r\n    // This function will fetch info from api url\r\n    const displayTacoPlace = () => {\r\n        fetch(\r\n            `https://colorful-halibut.glitch.me/api/v1/businesses/search?location=${cityInfo}&term=tacos`\r\n        )\r\n            .then((response) => response.json())\r\n\r\n            //When fetch is successful, information gets pushed into tacoPlace and sets state\r\n            .then((tacoPlace) => {\r\n                setTacoInfo(tacoPlace);\r\n            });\r\n    }\r\n\r\n    //if cityInfo exits, we will use the hook useEffect on the side, to display a list of taco places per location by calling displayTacoPlace\r\n    useEffect(() => {\r\n        if (cityInfo) {\r\n            displayTacoPlace();\r\n        }\r\n    }, [cityInfo]);\r\n\r\n\r\n    return (\r\n        <div id='main-container'>\r\n            {/* if tacoInfo is not zero, this function will map over tacoPlace and display details that match an unique key, otherwise will provide the link to do a new search */}\r\n            {tacoInfo.length !== 0 ? (\r\n                tacoInfo.businesses.map((tacoPlace, index) => {\r\n                    return (\r\n                        //adding index as an unique key\r\n                        <div key={index}>\r\n                            {/* div that displays taco place details */}\r\n                            <div>\r\n                                <h2 className=\"display-headline\">{tacoPlace.name}</h2>\r\n                                <p className=\"infoDisplay\">Address: {tacoPlace.location.display_address}</p>\r\n                                <p className=\"infoDisplay\">Phone: {tacoPlace.display_phone}</p>\r\n                                <p className=\"infoDisplay\">Rating: {tacoPlace.rating} stars</p>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : (\r\n                    <div id='header-links'>\r\n                        <Link to='/'>Search for Tacos!</Link>\r\n                    </div>\r\n                )}\r\n            <div id='header-links'>\r\n                <Link to='/'>Home</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TacoList",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":32,"column":8,"nodeType":"37","endLine":32,"endColumn":18,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayTacoPlace'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [cityInfo, displayTacoPlace]",{"range":"44","text":"45"},[1308,1318],"[cityInfo, displayTacoPlace]"]